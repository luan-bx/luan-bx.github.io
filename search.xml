<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git常用命令</title>
      <link href="/2022/02/20/git/"/>
      <url>/2022/02/20/git/</url>
      
        <content type="html"><![CDATA[<h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><ul><li><h2 id="初始化本地库"><a href="#初始化本地库" class="headerlink" title="初始化本地库"></a>初始化本地库</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git init</code></pre><ul><li><h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git status</code></pre><h1 id="推"><a href="#推" class="headerlink" title="推"></a>推</h1><ul><li><h2 id="添加到暂缓区"><a href="#添加到暂缓区" class="headerlink" title="添加到暂缓区"></a>添加到暂缓区</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git add .</code></pre><ul><li><h2 id="提交至本地库"><a href="#提交至本地库" class="headerlink" title="提交至本地库"></a>提交至本地库</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git commit -m '提交信息'</code></pre><ul><li><h2 id="推到远程仓库"><a href="#推到远程仓库" class="headerlink" title="推到远程仓库"></a>推到远程仓库</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git push</code></pre><h1 id="拉"><a href="#拉" class="headerlink" title="拉"></a>拉</h1><ul><li><h2 id="下拉并与本地合并"><a href="#下拉并与本地合并" class="headerlink" title="下拉并与本地合并"></a>下拉并与本地合并</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git pull</code></pre><ul><li><h2 id="如未知关联的仓库"><a href="#如未知关联的仓库" class="headerlink" title="如未知关联的仓库"></a>如未知关联的仓库</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git pull 仓库名 分支名</code></pre><h1 id="冲突"><a href="#冲突" class="headerlink" title="冲突"></a>冲突</h1><p>冲突产生的表现：后面状态为MERGING</p><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/57e02acec7b8b8e0f654934c039e9bb3.png"></p><ul><li>查看状态</li></ul><pre class=" language-Bash"><code class="language-Bash">git status</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/fd0174cbfce59addaf90bb936b2fd5eb.png"></p><p>解决合并问题：</p><p>1）编辑有冲突的文件，删除特殊符号，决定要使用的内容</p><p>特殊符号：<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD 当前分支的代码======= 合并过来的代码&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code></p><p>2）添加到暂存区</p><pre class=" language-Bash"><code class="language-Bash">git add XXXX（文件名） 或 git add .</code></pre><p>3）查看解决状态，全部绿色（modified修改过）</p><pre class=" language-Bash"><code class="language-Bash">git status</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/552a8ad42e123ea5e10a70e027dba00e.png"></p><p>4）执行提交（注意：此时使用git commit 命令时不能带文件名）</p><pre class=" language-Bash"><code class="language-Bash">git commit -m ' '</code></pre><p>发现后面MERGING 消失，变为正常</p><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/52b7fdf6e1ddb65b57e28ce92189a6ec.png"></p><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><ul><li><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git branch 分支名</code></pre><ul><li><h2 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git branch -v</code></pre><ul><li><h2 id="切换分支（切换分支的本质就是移动HEAD-指针）"><a href="#切换分支（切换分支的本质就是移动HEAD-指针）" class="headerlink" title="切换分支（切换分支的本质就是移动HEAD 指针）"></a>切换分支（切换分支的本质就是移动HEAD 指针）</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git checkout 分支名</code></pre><ul><li><h2 id="指定分支合并到当前分支"><a href="#指定分支合并到当前分支" class="headerlink" title="指定分支合并到当前分支"></a>指定分支合并到当前分支</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git merge 分支名</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/b2ac0f41fb9fa4621cdc29209adcd2bd.png"></p><h1 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h1><ul><li><h2 id="查看历史记录"><a href="#查看历史记录" class="headerlink" title="查看历史记录"></a>查看历史记录</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git reflog</code></pre><ul><li><h2 id="版本穿梭"><a href="#版本穿梭" class="headerlink" title="版本穿梭"></a>版本穿梭</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git reset --hard 版本号</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/ed7d30769d8dcd9b6b10fc6b00e47bca.png"></p><h1 id="vim相关操作"><a href="#vim相关操作" class="headerlink" title="vim相关操作"></a>vim相关操作</h1><p>主要用到：</p><p>“a”进入编辑</p><p>“Esc”退出编辑</p><p>“shift + :”开始编辑命令</p><p>“:wq”保存</p><p>“:q”退出vim</p><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/5320d98f969a0ceb31459fc7709aee67.png"></p><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/4be93568a0522540764bf5a8f66b6ae7.png"></p><h1 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h1><pre><code>git remote add 仓库名（本地自拟） git@xxx.github.com:用户名/仓库.git</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/83939ba5a3ff4ac70ac4de6a49408d18.png"><br>如果是推到新的仓库，出现以下情况，</p><p>则是：远程仓库中有着本地仓库没有的文件，由于远程仓库和本地仓库没有共同的commit，需要先pull<br><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/a7b47c89caeca75e6a55961785655fa6.png"><br>拒绝合并不相关的历史<br><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/bff674eb63d3e263de3d7c57612ec168.png"><br>所以需要：</p><pre class=" language-Bash"><code class="language-Bash">git pull origin master --allow-unrelated-histories</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/6afab4a5a34889f623d1dfdb69f11007.png"><br>完成！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>git常用命令</title>
      <link href="/2022/02/20/java3/"/>
      <url>/2022/02/20/java3/</url>
      
        <content type="html"><![CDATA[<h1 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h1><ul><li><h2 id="初始化本地库"><a href="#初始化本地库" class="headerlink" title="初始化本地库"></a>初始化本地库</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git init</code></pre><ul><li><h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git status</code></pre><h1 id="推"><a href="#推" class="headerlink" title="推"></a>推</h1><ul><li><h2 id="添加到暂缓区"><a href="#添加到暂缓区" class="headerlink" title="添加到暂缓区"></a>添加到暂缓区</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git add .</code></pre><ul><li><h2 id="提交至本地库"><a href="#提交至本地库" class="headerlink" title="提交至本地库"></a>提交至本地库</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git commit -m '提交信息'</code></pre><ul><li><h2 id="推到远程仓库"><a href="#推到远程仓库" class="headerlink" title="推到远程仓库"></a>推到远程仓库</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git push</code></pre><h1 id="拉"><a href="#拉" class="headerlink" title="拉"></a>拉</h1><ul><li><h2 id="下拉并与本地合并"><a href="#下拉并与本地合并" class="headerlink" title="下拉并与本地合并"></a>下拉并与本地合并</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git pull</code></pre><ul><li><h2 id="如未知关联的仓库"><a href="#如未知关联的仓库" class="headerlink" title="如未知关联的仓库"></a>如未知关联的仓库</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git pull 仓库名 分支名</code></pre><h1 id="冲突"><a href="#冲突" class="headerlink" title="冲突"></a>冲突</h1><p>冲突产生的表现：后面状态为MERGING</p><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/57e02acec7b8b8e0f654934c039e9bb3.png"></p><ul><li>查看状态</li></ul><pre class=" language-Bash"><code class="language-Bash">git status</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/fd0174cbfce59addaf90bb936b2fd5eb.png"></p><p>解决合并问题：</p><p>1）编辑有冲突的文件，删除特殊符号，决定要使用的内容</p><p>特殊符号：<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD 当前分支的代码======= 合并过来的代码&gt;&gt;&gt;&gt;&gt;&gt;&gt;</code></p><p>2）添加到暂存区</p><pre class=" language-Bash"><code class="language-Bash">git add XXXX（文件名） 或 git add .</code></pre><p>3）查看解决状态，全部绿色（modified修改过）</p><pre class=" language-Bash"><code class="language-Bash">git status</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/552a8ad42e123ea5e10a70e027dba00e.png"></p><p>4）执行提交（注意：此时使用git commit 命令时不能带文件名）</p><pre class=" language-Bash"><code class="language-Bash">git commit -m ' '</code></pre><p>发现后面MERGING 消失，变为正常</p><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/52b7fdf6e1ddb65b57e28ce92189a6ec.png"></p><h1 id="分支"><a href="#分支" class="headerlink" title="分支"></a>分支</h1><ul><li><h2 id="创建分支"><a href="#创建分支" class="headerlink" title="创建分支"></a>创建分支</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git branch 分支名</code></pre><ul><li><h2 id="查看分支"><a href="#查看分支" class="headerlink" title="查看分支"></a>查看分支</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git branch -v</code></pre><ul><li><h2 id="切换分支（切换分支的本质就是移动HEAD-指针）"><a href="#切换分支（切换分支的本质就是移动HEAD-指针）" class="headerlink" title="切换分支（切换分支的本质就是移动HEAD 指针）"></a>切换分支（切换分支的本质就是移动HEAD 指针）</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git checkout 分支名</code></pre><ul><li><h2 id="指定分支合并到当前分支"><a href="#指定分支合并到当前分支" class="headerlink" title="指定分支合并到当前分支"></a>指定分支合并到当前分支</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git merge 分支名</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/b2ac0f41fb9fa4621cdc29209adcd2bd.png"></p><h1 id="版本"><a href="#版本" class="headerlink" title="版本"></a>版本</h1><ul><li><h2 id="查看历史记录"><a href="#查看历史记录" class="headerlink" title="查看历史记录"></a>查看历史记录</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git reflog</code></pre><ul><li><h2 id="版本穿梭"><a href="#版本穿梭" class="headerlink" title="版本穿梭"></a>版本穿梭</h2></li></ul><pre class=" language-Bash"><code class="language-Bash">git reset --hard 版本号</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/ed7d30769d8dcd9b6b10fc6b00e47bca.png"></p><h1 id="vim相关操作"><a href="#vim相关操作" class="headerlink" title="vim相关操作"></a>vim相关操作</h1><p>主要用到：</p><p>“a”进入编辑</p><p>“Esc”退出编辑</p><p>“shift + :”开始编辑命令</p><p>“:wq”保存</p><p>“:q”退出vim</p><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/5320d98f969a0ceb31459fc7709aee67.png"></p><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/4be93568a0522540764bf5a8f66b6ae7.png"></p><h1 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h1><pre><code>git remote add 仓库名（本地自拟） git@xxx.github.com:用户名/仓库.git</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/83939ba5a3ff4ac70ac4de6a49408d18.png"><br>如果是推到新的仓库，出现以下情况，</p><p>则是：远程仓库中有着本地仓库没有的文件，由于远程仓库和本地仓库没有共同的commit，需要先pull<br><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/a7b47c89caeca75e6a55961785655fa6.png"><br>拒绝合并不相关的历史<br><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/bff674eb63d3e263de3d7c57612ec168.png"><br>所以需要：</p><pre class=" language-Bash"><code class="language-Bash">git pull origin master --allow-unrelated-histories</code></pre><p><img src="https://raw.githubusercontent.com/luan-bx/PicGO/main/img/6afab4a5a34889f623d1dfdb69f11007.png"><br>完成！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown</title>
      <link href="/2022/02/16/markdown/"/>
      <url>/2022/02/16/markdown/</url>
      
        <content type="html"><![CDATA[<p>Markdown 是一种轻量级标记语言，它用简洁的语法代替排版，使我们专心于码字。它的目标是实现易读易写，成为一种适用于网络的书写语言。同时，Markdown支持嵌入html标签。<br>注意：符号后面必须跟至少1个空格才有效！</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 一级标题</span><span class="token title important"><span class="token punctuation">##</span> 二级标题</span><span class="token title important"><span class="token punctuation">###</span> 三级标题</span></code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li>Red</li><li>Green</li><li>Blue</li></ul><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">-</span> Red<span class="token list punctuation">-</span> Green<span class="token list punctuation">-</span> Blue</code></pre><h2 id="标号"><a href="#标号" class="headerlink" title="标号"></a>标号</h2><ol><li>Red</li><li>Green</li><li>Blue</li></ol><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> Red<span class="token list punctuation">2.</span> Green<span class="token list punctuation">3.</span> Blue</code></pre><h2 id="打开本地服务器"><a href="#打开本地服务器" class="headerlink" title="打开本地服务器"></a>打开本地服务器</h2><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><blockquote><p>引用 ，注意：在<code>&gt;</code>后面有 1 个空格</p><pre><code>这是引用的代码块形式    //在`&gt;`后面有 5 个空格</code></pre></blockquote><blockquote><p>代码例子：<br>    protected void onCreate(Bundle savedInstanceState) {<br>        super.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br>    }</p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 一级引用<span class="token blockquote punctuation">> ></span> 二级引用<span class="token blockquote punctuation">> > ></span> 三级引用</code></pre><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 引用 ，注意：在<span class="token code keyword">`>`</span>后面有 1 个空格<span class="token blockquote punctuation">></span> <span class="token blockquote punctuation">></span><span class="token code keyword">     这是引用的代码块形式    //在`>`后面有 5 个空格</span></code></pre><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 代码例子：<span class="token code keyword">    protected void onCreate(Bundle savedInstanceState) &amp;#123;</span><span class="token code keyword">        super.onCreate(savedInstanceState);</span><span class="token code keyword">        setContentView(R.layout.activity_main);</span><span class="token code keyword">    &amp;#125;</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown</title>
      <link href="/2022/02/16/java1/"/>
      <url>/2022/02/16/java1/</url>
      
        <content type="html"><![CDATA[<p>Markdown 是一种轻量级标记语言，它用简洁的语法代替排版，使我们专心于码字。它的目标是实现易读易写，成为一种适用于网络的书写语言。同时，Markdown支持嵌入html标签。<br>注意：符号后面必须跟至少1个空格才有效！</p><h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h2><pre class=" language-markdown"><code class="language-markdown"><span class="token title important"><span class="token punctuation">#</span> 一级标题</span><span class="token title important"><span class="token punctuation">##</span> 二级标题</span><span class="token title important"><span class="token punctuation">###</span> 三级标题</span></code></pre><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><ul><li>Red</li><li>Green</li><li>Blue</li></ul><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">-</span> Red<span class="token list punctuation">-</span> Green<span class="token list punctuation">-</span> Blue</code></pre><h2 id="标号"><a href="#标号" class="headerlink" title="标号"></a>标号</h2><ol><li>Red</li><li>Green</li><li>Blue</li></ol><pre class=" language-markdown"><code class="language-markdown"><span class="token list punctuation">1.</span> Red<span class="token list punctuation">2.</span> Green<span class="token list punctuation">3.</span> Blue</code></pre><h2 id="打开本地服务器"><a href="#打开本地服务器" class="headerlink" title="打开本地服务器"></a>打开本地服务器</h2><blockquote><p>一级引用</p><blockquote><p>二级引用</p><blockquote><p>三级引用</p></blockquote></blockquote></blockquote><blockquote><p>引用 ，注意：在<code>&gt;</code>后面有 1 个空格</p><pre><code>这是引用的代码块形式    //在`&gt;`后面有 5 个空格</code></pre></blockquote><blockquote><p>代码例子：<br>    protected void onCreate(Bundle savedInstanceState) {<br>        super.onCreate(savedInstanceState);<br>        setContentView(R.layout.activity_main);<br>    }</p></blockquote><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 一级引用<span class="token blockquote punctuation">> ></span> 二级引用<span class="token blockquote punctuation">> > ></span> 三级引用</code></pre><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 引用 ，注意：在<span class="token code keyword">`>`</span>后面有 1 个空格<span class="token blockquote punctuation">></span> <span class="token blockquote punctuation">></span><span class="token code keyword">     这是引用的代码块形式    //在`>`后面有 5 个空格</span></code></pre><pre class=" language-markdown"><code class="language-markdown"><span class="token blockquote punctuation">></span> 代码例子：<span class="token code keyword">    protected void onCreate(Bundle savedInstanceState) &amp;#123;</span><span class="token code keyword">        super.onCreate(savedInstanceState);</span><span class="token code keyword">        setContentView(R.layout.activity_main);</span><span class="token code keyword">    &amp;#125;</span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2022/02/15/hexo/"/>
      <url>/2022/02/15/hexo/</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h2><pre class=" language-bash"><code class="language-bash">hexo clean</code></pre><h2 id="构建静态文件"><a href="#构建静态文件" class="headerlink" title="构建静态文件"></a>构建静态文件</h2><pre class=" language-bash"><code class="language-bash">hexo g</code></pre><h2 id="上传至仓库"><a href="#上传至仓库" class="headerlink" title="上传至仓库"></a>上传至仓库</h2><pre class=" language-bash"><code class="language-bash">hexo d</code></pre><h2 id="打开本地服务器"><a href="#打开本地服务器" class="headerlink" title="打开本地服务器"></a>打开本地服务器</h2><pre class=" language-bash"><code class="language-bash">hexo server //可进行本地调试</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2022/02/15/java2/"/>
      <url>/2022/02/15/java2/</url>
      
        <content type="html"><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="清理"><a href="#清理" class="headerlink" title="清理"></a>清理</h2><pre class=" language-bash"><code class="language-bash">hexo clean</code></pre><h2 id="构建静态文件"><a href="#构建静态文件" class="headerlink" title="构建静态文件"></a>构建静态文件</h2><pre class=" language-bash"><code class="language-bash">hexo g</code></pre><h2 id="上传至仓库"><a href="#上传至仓库" class="headerlink" title="上传至仓库"></a>上传至仓库</h2><pre class=" language-bash"><code class="language-bash">hexo d</code></pre><h2 id="打开本地服务器"><a href="#打开本地服务器" class="headerlink" title="打开本地服务器"></a>打开本地服务器</h2><pre class=" language-bash"><code class="language-bash">hexo server //可进行本地调试</code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
