<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>git常用命令</title>
      <link href="/2023/02/20/git/"/>
      <url>/2023/02/20/git/</url>
      
        <content type="html"><![CDATA[<h2 id="一、查看已有ssh-key首先确保能够查看隐藏目录，进入C-Users-XXXXX-ssh目录，查看是否生成过密钥。id-rsa-pub和id-rsa分别为一对公-x2F-私密钥多个账户可再次创建密钥，但默认的名字需要修改，不能相同，否则会被提示是否重写默认为id-rsa，因此第二个密钥我修改了名字为id-rsa-lbx"><a href="#一、查看已有ssh-key首先确保能够查看隐藏目录，进入C-Users-XXXXX-ssh目录，查看是否生成过密钥。id-rsa-pub和id-rsa分别为一对公-x2F-私密钥多个账户可再次创建密钥，但默认的名字需要修改，不能相同，否则会被提示是否重写默认为id-rsa，因此第二个密钥我修改了名字为id-rsa-lbx" class="headerlink" title="一、查看已有ssh key首先确保能够查看隐藏目录，进入C:\Users\XXXXX.ssh目录，查看是否生成过密钥。id_rsa.pub和id_rsa分别为一对公&#x2F;私密钥多个账户可再次创建密钥，但默认的名字需要修改，不能相同，否则会被提示是否重写默认为id_rsa，因此第二个密钥我修改了名字为id_rsa_lbx"></a>一、查看已有ssh key<br>首先确保能够查看隐藏目录，进入C:\Users\XXXXX.ssh目录，查看是否生成过密钥。<br>id_rsa.pub和id_rsa分别为一对公&#x2F;私密钥<br>多个账户可再次创建密钥，但默认的名字需要修改，不能相同，否则会被提示是否重写<br>默认为id_rsa，因此第二个密钥我修改了名字为id_rsa_lbx</h2><h2 id="二、生成ssh-keyssh-keygen-t-rsa-C-“-x79-x6f-117-x72-101-x6d-x61-105-108-x40-121-111-x75-114-99-x6f-109-112-97-110-121-46-x63-x6f-x6d-“蓝色字体为你的邮箱，不同ssh-key需要绑定不同邮箱如果已经生成多个ssh-key，如上图，则跳过此步三、设置ssh-key的代理（1）首先查看代理ssh-add-l如果提示Could-not-open-a-connection-to-your-authentication-agent-则系统代理里没有任何key，执行如下操作exec-ssh-agent-bash若系统已经有ssh-key-代理-可以删除ssh-add-D"><a href="#二、生成ssh-keyssh-keygen-t-rsa-C-“-x79-x6f-117-x72-101-x6d-x61-105-108-x40-121-111-x75-114-99-x6f-109-112-97-110-121-46-x63-x6f-x6d-“蓝色字体为你的邮箱，不同ssh-key需要绑定不同邮箱如果已经生成多个ssh-key，如上图，则跳过此步三、设置ssh-key的代理（1）首先查看代理ssh-add-l如果提示Could-not-open-a-connection-to-your-authentication-agent-则系统代理里没有任何key，执行如下操作exec-ssh-agent-bash若系统已经有ssh-key-代理-可以删除ssh-add-D" class="headerlink" title="二、生成ssh keyssh-keygen -t rsa -C “&#x79;&#x6f;&#117;&#x72;&#101;&#x6d;&#x61;&#105;&#108;&#x40;&#121;&#111;&#x75;&#114;&#99;&#x6f;&#109;&#112;&#97;&#110;&#121;&#46;&#x63;&#x6f;&#x6d;“蓝色字体为你的邮箱，不同ssh key需要绑定不同邮箱如果已经生成多个ssh key，如上图，则跳过此步三、设置ssh key的代理（1）首先查看代理ssh-add -l如果提示Could not open a connection to your authentication agent.则系统代理里没有任何key，执行如下操作exec ssh-agent bash若系统已经有ssh-key 代理 ,可以删除ssh-add -D"></a>二、生成ssh key<br>ssh-keygen -t rsa -C “<a href="mailto:&#x79;&#x6f;&#117;&#x72;&#101;&#x6d;&#x61;&#105;&#108;&#x40;&#121;&#111;&#x75;&#114;&#99;&#x6f;&#109;&#112;&#97;&#110;&#121;&#46;&#x63;&#x6f;&#x6d;">&#x79;&#x6f;&#117;&#x72;&#101;&#x6d;&#x61;&#105;&#108;&#x40;&#121;&#111;&#x75;&#114;&#99;&#x6f;&#109;&#112;&#97;&#110;&#121;&#46;&#x63;&#x6f;&#x6d;</a>“<br>蓝色字体为你的邮箱，不同ssh key需要绑定不同邮箱<br>如果已经生成多个ssh key，如上图，则跳过此步<br>三、设置ssh key的代理<br>（1）首先查看代理<br>ssh-add -l<br>如果提示<br>Could not open a connection to your authentication agent.<br>则系统代理里没有任何key，执行如下操作<br>exec ssh-agent bash<br>若系统已经有ssh-key 代理 ,可以删除<br>ssh-add -D</h2><h2 id="（2）-添加私钥ssh-add-x2F-ssh-x2F-id-rsassh-add-x2F-ssh-x2F-id-rsa-lbx"><a href="#（2）-添加私钥ssh-add-x2F-ssh-x2F-id-rsassh-add-x2F-ssh-x2F-id-rsa-lbx" class="headerlink" title="（2） 添加私钥ssh-add ~&#x2F;.ssh&#x2F;id_rsassh-add ~&#x2F;.ssh&#x2F;id_rsa_lbx"></a>（2） 添加私钥<br>ssh-add ~&#x2F;.ssh&#x2F;id_rsa<br>ssh-add ~&#x2F;.ssh&#x2F;id_rsa_lbx</h2><h2 id="（3）添加公钥在目标账户github的ssh管理页面，添加对应的公钥（刚才生成的ssh-key，如id-rsa-pub-等以-pub结尾的文件内容）。"><a href="#（3）添加公钥在目标账户github的ssh管理页面，添加对应的公钥（刚才生成的ssh-key，如id-rsa-pub-等以-pub结尾的文件内容）。" class="headerlink" title="（3）添加公钥在目标账户github的ssh管理页面，添加对应的公钥（刚才生成的ssh key，如id_rsa.pub 等以.pub结尾的文件内容）。"></a>（3）添加公钥<br>在目标账户github的ssh管理页面，添加对应的公钥（刚才生成的ssh key，如id_rsa.pub 等以.pub结尾的文件内容）。</h2><p>（4）新建并编辑配置文件config<br>在 ~&#x2F;.ssh 目录下新建一个config文件<br>touch ~&#x2F;.ssh&#x2F;config<br>添加内容<br>方法一：</p><h1 id="github"><a href="#github" class="headerlink" title="github"></a>github</h1><p>Host github.com<br>    HostName github.com<br>    PreferredAuthentications publickey<br>    IdentityFile ~&#x2F;.ssh&#x2F;id_rsa<br>user git<br>其中，id_rsa 为你要关联的账户对应的密钥，电脑需要关联哪个账户，这边就写哪个<br>如此，ssh就会根据登陆的不同域，来读取对应的私钥文件<br>如需要用到其他账户的远程仓库，则在此处修改目标仓库生成的ssh key即可。<br>方法二：<br>同时将两个ssh key同时写入，但区分Host名称即可，并且对应的ssh key文件对应好。<br>并且以后在github.com前面加上前缀（Host名称），就可以跳转到各个账号的仓库。</p><hr><p> 四、测试<br>ssh -T <a href="mailto:&#x67;&#105;&#x74;&#x40;&#x67;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#109;">&#x67;&#105;&#x74;&#x40;&#x67;&#105;&#116;&#x68;&#x75;&#x62;&#46;&#x63;&#111;&#109;</a><br>若出现<br>Hi XXX! You’ve successfully authenticated, but GitHub does not provide shell access.<br>则表示成功。查看XXX是否为关联的账户</p>]]></content>
      
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown</title>
      <link href="/2023/02/18/markdown/"/>
      <url>/2023/02/18/markdown/</url>
      
        <content type="html"><![CDATA[<p>Markdown 是一种轻量级标记语言，它用简洁的语法代替排版，使我们专心于码字。它的目标是实现易读易写，成为一种适用于网络的书写语言。同时，Markdown支持嵌入html标签。<br>注意：Markdown使用#、+、*等符号来标记， 符号后面必须跟上 至少1个 空格才有效！</p>]]></content>
      
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo</title>
      <link href="/2023/02/16/hexo/"/>
      <url>/2023/02/16/hexo/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
